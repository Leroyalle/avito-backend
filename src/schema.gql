# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type FieldEntity {
  """ID поля"""
  id: ID!

  """Название поля"""
  name: String!

  """Категории поля"""
  categories: [Category!]!

  """Дата создания"""
  createdAt: Timestamp!

  """Дата последнего обновления"""
  updatedAt: Timestamp!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Category {
  """ID категории"""
  id: ID!

  """Название категории"""
  name: String!

  """Slug категории"""
  slug: String!

  """Поля категории"""
  fields: [FieldEntity!]!

  """Лого категории"""
  image: String!
}

type User {
  """ID пользователя"""
  id: ID!

  """Имя пользователя"""
  name: String!

  """Email пользователя"""
  email: String!

  """Password пользователя"""
  password: String!

  """Password пользователя"""
  listings: [Listing!]!

  """Refresh token"""
  refreshToken: String

  """Дата создания пользователя"""
  createdAt: Timestamp!

  """Дата последнего обновления пользователя"""
  updatedAt: Timestamp!
}

type Filter {
  """ID фильтра"""
  id: ID!

  """Название фильтра"""
  name: String!

  """Дата создания фильтра"""
  createdAt: Timestamp!

  """Дата последнего обновления фильтра"""
  updatedAt: Timestamp!
}

type Listing {
  """ID объявления"""
  id: ID!

  """Название объявления"""
  name: String!

  """Цена объявления"""
  price: Int!

  """Описание объявления"""
  description: String!

  """Изображения объявления"""
  images: [String!]!
  user: User!

  """ID пользователя"""
  userId: String!

  """Категории объявления"""
  categories: [Category!]!

  """Фильтр объявления"""
  filters: [Filter!]!

  """Дата создания объявления"""
  createdAt: Timestamp!

  """Дата последнего обновления объявления"""
  updatedAt: Timestamp!

  """Тип товара"""
  productType: String!

  """Состояние товара"""
  condition: String!

  """Год выпуска"""
  yearOfManufacture: Int!

  """Производитель"""
  manufacturer: String!

  """Модель товара"""
  model: String!

  """Цвет товара"""
  color: String!

  """Размер товара"""
  size: String!

  """Вес товара"""
  weight: String!

  """Тип привода (для автомобилей)"""
  driveType: String!

  """Километраж (для автомобилей)"""
  mileage: Int!

  """Количество комнат (для недвижимости)"""
  numberOfRooms: Int!

  """Этаж (для недвижимости)"""
  floor: Int!

  """Площадь товара или недвижимости"""
  area: Int!

  """Материал (для мебели)"""
  material: String!

  """Тип подключения (для техники)"""
  connectionType: String!

  """Объем памяти (для телефонов и компьютеров)"""
  memorySize: Int!

  """Экологический класс (для автомобилей)"""
  environmentalClass: String!

  """Тип двигателя (для автомобилей)"""
  engineType: String!
  getUserListings(pagePagination: PagePagination!): Listing!
}

input PagePagination {
  """Страница"""
  page: Int = 1

  """Количество"""
  perPage: Int = 20
}

type Auth {
  """Access token"""
  accessToken: String!

  """RefreshToken token"""
  refreshToken: String!
}

type Logout {
  """Сообщение о выходе"""
  message: String!
}

type Query {
  findAllListings(pagePagination: PagePagination!): [Listing!]!
  findAllBySlugCategory(findListingsInput: FindListingsInput!, slug: String!): [Listing!]!
  findOneListing(id: ID!): Listing!
  searchListings(searchListingsInput: SearchListingsInput!): [Listing!]!
  findAllCategories: [Category!]!
  findAllByCategory(categoryId: String!): [FieldEntity!]!
  findAllFilters: [Filter!]!
  findAllUsers: [User!]!
  findOneUser(id: ID!): User!
}

input FindListingsInput {
  """Страница"""
  page: Int = 1

  """Количество"""
  perPage: Int = 20

  """ID фильтров"""
  filters: [ID!]!

  """Минимальная цена фильтра"""
  minPrice: Int! = 0

  """Максимальная цена фильтра"""
  maxPrice: Int! = 0
}

input SearchListingsInput {
  """Название объявления"""
  name: String!
}

type Mutation {
  createListing(createListingInput: CreateListingInput!): Listing!
  createUser(createUserInput: CreateUserInput!): User!
  signUp(signUpInput: RegisterInput!): Auth!
  signIn(signInInput: RegisterInput!): Auth!
  logout: Logout!
  refreshTokens: Auth!
}

input CreateListingInput {
  """Название объявления"""
  name: String!

  """Цена объявления"""
  price: Int!

  """Описание объявления"""
  description: String!

  """Изображения объявления"""
  images: [String!]!

  """ID категории"""
  categoryId: ID!

  """Характеристики"""
  fields: [CreateListingFieldsInput!]!
}

input CreateListingFieldsInput {
  """ID характеристики"""
  fieldId: ID!

  """Значение характеристики"""
  value: String!
}

input CreateUserInput {
  """Имя пользователя"""
  name: String!

  """Email пользователя"""
  email: String!

  """Password пользователя"""
  password: String!

  """Токен обновления"""
  refreshToken: String
}

input RegisterInput {
  """Имя пользователя"""
  name: String!

  """Email пользователя"""
  email: String!

  """Password пользователя"""
  password: String!
}
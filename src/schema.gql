# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  """ID категории"""
  id: ID!

  """Название категории"""
  name: String!

  """Slug категории"""
  slug: String!

  """Лого категории"""
  image: String!
}

type User {
  """ID пользователя"""
  id: ID!

  """Имя пользователя"""
  name: String!

  """Email пользователя"""
  email: String!

  """Password пользователя"""
  password: String!

  """Password пользователя"""
  listings: [Listing!]!

  """Refresh token"""
  refreshToken: String

  """Дата создания пользователя"""
  createdAt: Timestamp!

  """Дата последнего обновления пользователя"""
  updatedAt: Timestamp!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Filter {
  """ID фильтра"""
  id: ID!

  """Название фильтра"""
  name: String!

  """Дата создания фильтра"""
  createdAt: Timestamp!

  """Дата последнего обновления фильтра"""
  updatedAt: Timestamp!
}

type Listing {
  """ID объявления"""
  id: ID!

  """Название объявления"""
  name: String!

  """Цена объявления"""
  price: Int!

  """Описание объявления"""
  description: String!

  """Изображения объявления"""
  images: [String!]!
  user: User!

  """ID пользователя"""
  userId: String!

  """Категории объявления"""
  categories: [Category!]!

  """Фильтр объявления"""
  filters: [Filter!]!

  """Дата создания объявления"""
  createdAt: Timestamp!

  """Дата последнего обновления объявления"""
  updatedAt: Timestamp!
  getUserListings(pagePagination: PagePagination!): Listing!
}

input PagePagination {
  """Страница"""
  page: Int = 1

  """Количество"""
  perPage: Int = 20
}

type Auth {
  """Access token"""
  accessToken: String!

  """RefreshToken token"""
  refreshToken: String!
}

type Logout {
  """Сообщение о выходе"""
  message: String!
}

type Query {
  findAllListings(pagePagination: PagePagination!): [Listing!]!
  findAllBySlugCategory(findListingsInput: FindListingsInput!, slug: String!): [Listing!]!
  findOneListing(id: ID!): Listing!
  findAllCategories: [Category!]!
  findAllFilters: [Filter!]!
  findAllUsers: [User!]!
  findOneUser(id: ID!): User!
}

input FindListingsInput {
  """Страница"""
  page: Int = 1

  """Количество"""
  perPage: Int = 20

  """ID фильтров"""
  filters: [ID!]!

  """Минимальная цена фильтра"""
  minPrice: Int! = 0

  """Максимальная цена фильтра"""
  maxPrice: Int! = 0
}

type Mutation {
  createListing(createListingInput: CreateListingInput!): Listing!
  createUser(createUserInput: CreateUserInput!): User!
  signUp(signUpInput: RegisterInput!): Auth!
  signIn(signInInput: RegisterInput!): Auth!
  logout: Logout!
  refreshTokens: Auth!
}

input CreateListingInput {
  """Название объявления"""
  name: String!

  """Цена объявления"""
  price: Int!

  """Описание объявления"""
  description: String!

  """Изображения объявления"""
  images: [String!]!
}

input CreateUserInput {
  """Имя пользователя"""
  name: String!

  """Email пользователя"""
  email: String!

  """Password пользователя"""
  password: String!

  """Токен обновления"""
  refreshToken: String
}

input RegisterInput {
  """Имя пользователя"""
  name: String!

  """Email пользователя"""
  email: String!

  """Password пользователя"""
  password: String!
}